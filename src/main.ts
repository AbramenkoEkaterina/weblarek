import "./scss/styles.scss";

import { ApiServise } from "./components/Models/ApiServise";
import { Catalog } from "./components/Models/Catalog";
import { Gallery } from "./components/Views/Gallery";
import { CardCatalog } from "./components/Views/Card/CardCatalog";
import { EventEmitter } from "./components/base/Events";
import { cloneTemplate, ensureElement } from "./utils/utils";
import { API_URL } from "./utils/constants";
import { IOrder, IProduct } from "./types";
import { Cart } from "./components/Models/Cart";
import { Buyer } from "./components/Models/Buyer";
import { Header } from "./components/Views/Header";
import { Modal } from "./components/Views/Modal";
import { CardPreview } from "./components/Views/Card/CardPreview";
import { Basket } from "./components/Views/Basket";
import { FormOrder } from "./components/Views/Form/FormOrder";
import { FormContacts } from "./components/Views/Form/FormContacts";
import { Success } from "./components/Views/Success";

const events = new EventEmitter();
const api = new ApiServise(API_URL);
//–º–æ–¥–µ–ª–∏
const catalog = new Catalog(events); //–ø–µ—Ä–µ–¥–∞–ª–∞ —Å–æ–±—ã—Ç–∏–µ
const buyer = new Buyer();
//view
const cart = new Cart(events);
const gallery = new Gallery(ensureElement<HTMLElement>('.gallery'));
const header = new Header(events, ensureElement<HTMLElement>('.header'));
const modal = new Modal(ensureElement<HTMLElement>('#modal-container'), events);


  const templateCardCatalog = ensureElement<HTMLTemplateElement>('#card-catalog');
  const templateCardPreview = ensureElement<HTMLTemplateElement>('#card-preview');
  const templateBasket = ensureElement<HTMLTemplateElement>('#basket');
  const templateFormOrder = ensureElement<HTMLTemplateElement>('#order');
  const templateFormContacts = ensureElement<HTMLTemplateElement>('#contacts');
  const templateSuccess = ensureElement<HTMLTemplateElement>('#success');
  const basketView = new Basket(cloneTemplate(templateBasket), events);

  //catalog:changed –∫–∞—Ç–∞–ª–æ–≥ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è) (1)
  events.on<{ items: IProduct[] }>('catalog:changed', ({ items }) => {
  const cards = items.map((product) => {
    const card = new CardCatalog(cloneTemplate(templateCardCatalog), events);
    return card.render(product);
  });
  gallery.catalog = cards;
});

//–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –∫–∞–∫ ‚Äú—Ç–µ–∫—É—â–∏–π‚Äù.card:select (2)
events.on<{ id: string }>('card:select', ({id}) => {
  const product = catalog.getItemById(id);
  if (!product) return;
  catalog.setSelectedItem(product)
})

//–û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–µ–≤—å—é –∫–∞—Ä—Ç–æ—á–∫–∏ catalog:item-selected' 
events.on('catalog:item-selected', () => {
  const product = catalog.getSelectedItem();
  if(!product) return;

  const previewEl = cloneTemplate(templateCardPreview);
  const previewCard = new CardPreview(previewEl, events);

  //–µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω–µ?
  const inCart =cart.hasCartItem(product);
  let buttonText;
  if (product.price) {
    buttonText = inCart ? '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã' : '–ö—É–ø–∏—Ç—å';
  } else {
    buttonText = '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ';
  }
  modal.content = previewCard.render({...product, buttonText});
  modal.open()
});

//–õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ ‚Äú–ö—É–ø–∏—Ç—å / –£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã‚Äù 'product:button-click' (4)
events.on<{ id: string }>('product:button-click', ({ id }) => {
  const product = catalog.getItemById(id);
  if (!product) return;

  const inCart = cart.hasCartItem(product);

  if (inCart) {
    cart.removeCartItem(product);
  } else {
    cart.addCartItem(product);
  }

  // –Ω–∞—Ö–æ–¥–∏–º –æ—Ç–∫—Ä—ã—Ç—É—é –∫–∞—Ä—Ç–æ—á–∫—É –ø—Ä–µ–≤—å—é
  const modalContent = document.querySelector('.card_full');
  if (modalContent) {
    const button = modalContent.querySelector<HTMLButtonElement>('.card__button');
    if (button) {
      button.textContent = inCart ? '–ö—É–ø–∏—Ç—å' : '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã';
    }
  }
});

//–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã cart:remove 
events.on<{ id: string }>('cart:remove', ({ id }) => {
  const product = cart.getCartItems().find(item => item.id === id);
  if (!product) return;
  cart.removeCartItem(product);
});


//–û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã basket:open 
events.on('basket:open', () => {
  basketView.basket = {
    items: cart.getCartItems(),
    total: cart.getCartTotal(),
  }

  modal.content = basketView.render()
  modal.open();
  // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ —Å–µ–π—á–∞—Å –æ—Ç–∫—Ä—ã—Ç–∞ –∫–æ—Ä–∑–∏–Ω–∞ (—á—Ç–æ–±—ã –æ–±–Ω–æ–≤–ª—è—Ç—å live)
  (modal as any).currentView = "basket";
})

//–ö–æ–≥–¥–∞ –∫–æ—Ä–∑–∏–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
events.on('cart:changed', () => {
  header.counter = cart.getCartCount();
  if ((modal as any).currentView === "basket") {
    basketView.basket = {
      items: cart.getCartItems(),
      total: cart.getCartTotal(),
    };
    modal.content = basketView.render()
  }
  })

// –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
//–∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –≤ –∫–æ—Ä–∏–Ω–µ
events.on("basket:checkout", () => {
  const orderForm = new FormOrder(cloneTemplate(templateFormOrder), events);
  modal.content = orderForm.render();
});


// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ñ–æ—Ä–º—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
events.on("order:stepNext", () => {
  const contactsForm = new FormContacts(cloneTemplate(templateFormContacts), events);
  modal.content = contactsForm.render();
});


//–†–µ–∞–∫—Ü–∏—è –Ω–∞ –≤–≤–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ö

events.on<{ field: string; value: string | null }>('form:change', ({ field, value }) => {
  // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–æ–¥–µ–ª—å
  buyer.setDataBuyer({ [field]: value } as any);

  // –Ω–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â—É—é –æ—Ç–∫—Ä—ã—Ç—É—é —Ñ–æ—Ä–º—É
  const formEl = document.querySelector('form');
  if (!formEl) return;

  const isOrderForm = formEl.getAttribute('name') === 'order';
  const activeForm = isOrderForm
    ? new FormOrder(formEl as HTMLFormElement, events)
    : new FormContacts(formEl as HTMLFormElement, events);

  // –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –æ—à–∏–±–∫–∏
  const errors = buyer.valiDataBuyer();

  // –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞ ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ address –∏ payment
  if (isOrderForm) {
    const hasAddressError = !!errors.address;
    const hasPaymentError = !!errors.payment;

    const isValid = !hasAddressError && !hasPaymentError;
    activeForm.setValid(isValid);
    activeForm.setErrors(isValid ? null : '–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã');
  }

  // –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ email –∏ phone
  if (!isOrderForm) {
    const hasEmailError = !!errors.email;
    const hasPhoneError = !!errors.phone;

    const isValid = !hasEmailError && !hasPhoneError;
    activeForm.setValid(isValid);
    activeForm.setErrors(isValid ? null : '–£–∫–∞–∂–∏—Ç–µ email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω');
  }
});

//  –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã (–∫–æ–Ω—Ç–∞–∫—Ç—ã)
events.on('form:submit', () => {
  const formEl = document.querySelector('form');
  if (!formEl) return;

  const isOrderForm = formEl.getAttribute('name') === 'order';
  const isContactsForm = formEl.getAttribute('name') === 'contacts';

  // === –®–∞–≥ 1. –§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞ (—Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã + –∞–¥—Ä–µ—Å)
  if (isOrderForm) {
    const activeForm = new FormOrder(formEl as HTMLFormElement, events);
    activeForm.setErrors(null); // –æ—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏

    const { address, payment } = buyer.getDataBuyer();

    if (address && payment) {
      events.emit('order:stepNext'); // –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ñ–æ—Ä–º—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    } else {
      activeForm.setErrors('–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã');
    }
    return;
  }

  // === –®–∞–≥ 2. –§–æ—Ä–º–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (email + —Ç–µ–ª–µ—Ñ–æ–Ω)
  if (isContactsForm) {
    const activeForm = new FormContacts(formEl as HTMLFormElement, events);
    activeForm.setErrors(null); // –æ—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏

    const { email, phone } = buyer.getDataBuyer();

    if (!email || !phone) {
      activeForm.setErrors('–£–∫–∞–∂–∏—Ç–µ email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω');
      activeForm.setValid(false);
      return;
    }

    activeForm.setValid(true);

    const order: IOrder = {
      ...buyer.getDataBuyer(),
      total: cart.getCartTotal(),
      items: cart.getCartItems().map(p => p.id),
    };

    // === –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä ===
    api.postOrder(order)
      .then(() => {
        const successEl = cloneTemplate(templateSuccess);
        const success = new Success(successEl, events);
        success.total = order.total; // –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—É–º–º—É —Å–ø–∏—Å–∞–Ω–∏—è

         (modal as any).currentView = "success";
        modal.content = success.render();
        modal.open();

        // –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
        cart.clearCart();
        buyer.clearDataBuyer();
        header.counter = 0;
      })
      .catch((err) => {
        activeForm.setErrors('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞');
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', err);
      });
  }
});


// ==========================
// üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ ¬´–ó–∞ –Ω–æ–≤—ã–º–∏ –ø–æ–∫—É–ø–∫–∞–º–∏!¬ª
// ==========================
events.on('success:close', () => {
  modal.close();          // –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
  gallery.catalog = [];   // –æ—á–∏—â–∞–µ–º –≤–∏—Ç—Ä–∏–Ω—É (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å)
  api.getProducts().then((data) => {
    const updated = data.items.map(item => ({
      ...item,
      image: item.image ? item.image.replace(/\.svg$/i, '.png') : item.image
    }));
    catalog.setItems(updated); // –∑–∞–Ω–æ–≤–æ –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥
  });
});

// === –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ API ===
api.getProducts()
  .then((data) => {
    // –ú–µ–Ω—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .svg ‚Üí .png –¥–ª—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
    const updatedItems = data.items.map(item => ({
      ...item,
      image: item.image ? item.image.replace(/\.svg$/i, '.png') : item.image
    }));

    catalog.setItems(updatedItems);
  })
  .catch((err) => {
    console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥:', err);
  });


